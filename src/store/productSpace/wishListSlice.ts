import { createAsyncThunk, createSlice, PayloadAction } from "@reduxjs/toolkit";
import { WishListItemDto } from "../../api/ProductSpace/WishListService/Dtos/WishListItemDto";
import {
    fetchGetWishList,
    toggleFavoriteBatch
} from "../../api/ProductSpace/WishListService/WishListService";
import { GetWishListResponse } from "../../api/ProductSpace/WishListService/Responses/GetWishListResponse";
import {RootState, store} from "../store";
import { addNotification } from "../notificationSlice";
import {ShortProductDtoUiExtended} from "../../api/ProductSpace/ProductService/UI/ShortProductDtoUiExtended.ts";
import { updateProductFavoriteStatus } from "./productsSlice.ts";


// –ö–ª—é—á –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ `localStorage`
const LOCAL_STORAGE_KEY = "wishlist";
const ORIGINAL_LOCAL_STORAGE_KEY = "original_wishlist";

interface WishListState {
    wishList: WishListItemDto[];
    originalWishList: WishListItemDto[];
    isLoading: boolean;
}

const initialState: WishListState = {
    wishList: JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY) || "[]"),
    originalWishList: JSON.parse(localStorage.getItem(ORIGINAL_LOCAL_STORAGE_KEY) || "[]"),
    isLoading: false,
};


// ‚úÖ `thunk` –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–∏–∑ –ë–î –∏–ª–∏ `localStorage`)
export const fetchWishListThunk = createAsyncThunk<GetWishListResponse, boolean>(
    "wishList/fetchWishList",
    async (isAuthenticated) => {
        if (isAuthenticated) {
            return await fetchGetWishList();
        } else {
            return {
                success: true,
                wishList: JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY) || "[]"),
                error: null,
            };
        }
    }
);


let syncTimeout: NodeJS.Timeout | null = null; // –¢–∞–π–º–µ—Ä –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏

export const toggleFavoriteThunk = createAsyncThunk<void, ShortProductDtoUiExtended, { state: RootState }>(
    "products/toggleFavorite",
    async (product, { getState, dispatch  }) => {
        const state = getState();
        const customer = state.authSlice.customer;
        const isAuthenticated = !!customer;

        // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º `isFavorite` –≤ `Redux`, —á—Ç–æ–±—ã UI –æ–±–Ω–æ–≤–∏–ª—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ

        // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º `localStorage` –º–≥–Ω–æ–≤–µ–Ω–Ω–æ
        const wishList: ShortProductDtoUiExtended[] = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY) || "[]");
        const index = wishList.findIndex((item) => item.id === product.id);
        const isAdding = index === -1;

        if (isAdding) {
            wishList.push({ ...product, isFavorite: true });
            dispatch(updateProductFavoriteStatus({ productId: product.id, isFavorite: true }));
        } else {
            wishList.splice(index, 1);
            dispatch(updateProductFavoriteStatus({ productId: product.id, isFavorite: false }));
        }

        // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º `Redux`
        dispatch(updateWishList(wishList));

        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(wishList));


        if (isAuthenticated) {
            // ‚úÖ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –∂–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –∑–∞–ø—Ä–æ—Å–∞
            if (syncTimeout) {
                clearTimeout(syncTimeout); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
            }

            syncTimeout = setTimeout(async () => {
                const originalWishList: ShortProductDtoUiExtended[] = JSON.parse(localStorage.getItem(ORIGINAL_LOCAL_STORAGE_KEY) || "[]");
                const wishList: ShortProductDtoUiExtended[] = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY) || "[]");


                const editList = findWishListChanges(wishList, originalWishList);


                if(editList.length === 0) return;

                localStorage.setItem(ORIGINAL_LOCAL_STORAGE_KEY, JSON.stringify(wishList));

                console.log(editList);
                console.log(wishList.length);

                await syncFavoritesWithServer(editList); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            }, 2000); // ‚è≥ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–ª–∏–∫–∞
        }
    }
);


function findWishListChanges(wishList: ShortProductDtoUiExtended[], originalWishList: ShortProductDtoUiExtended[]) {
    const changes: ShortProductDtoUiExtended[] = [];

    // –°–æ–∑–¥–∞–µ–º `Map` –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ `id`
    const originalMap = new Map(originalWishList.map((product) => [product.id, product]));

    // üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    for (const product of wishList) {
        const originalProduct = originalMap.get(product.id);

        if (!originalProduct) {
            // ‚úÖ –ü—Ä–æ–¥—É–∫—Ç –Ω–æ–≤—ã–π (–±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω)
            changes.push({ ...product });
        } else if (product.isFavorite !== originalProduct.isFavorite) {
            // ‚úÖ –ü—Ä–æ–¥—É–∫—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è (`isFavorite` –ø–æ–º–µ–Ω—è–ª—Å—è)
            changes.push({ ...product });
        }

        // ‚úÖ –£–¥–∞–ª—è–µ–º –∏–∑ `originalMap`, —á—Ç–æ–±—ã –ø–æ—Å–ª–µ –Ω–∞–π—Ç–∏ —É–¥–∞–ª–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        originalMap.delete(product.id);
    }

    // üîπ –û—Å—Ç–∞–≤—à–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã –≤ `originalMap` - —ç—Ç–æ —É–¥–∞–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
    for (const removedProduct of originalMap.values()) {
        changes.push({ ...removedProduct, isFavorite: false }); // –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –ø—Ä–æ–¥—É–∫—Ç —É–¥–∞–ª–µ–Ω
    }

    return changes;
}


async function syncFavoritesWithServer(bach: ShortProductDtoUiExtended[]) {

    try {
        const response = await toggleFavoriteBatch(bach); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ `id` –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        if (response.success) {

            console.log(`‚úÖ –ò–∑–±—Ä–∞–Ω–Ω–æ–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å —Å–µ—Ä–≤–µ—Ä–æ–º`);
        } else {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:", response.error);
        }
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –±–∞—Ç—á-–∑–∞–ø—Ä–æ—Å–∞:", error);
    }
}



// ‚úÖ `thunk` –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–∑ `localStorage` –≤ –ë–î –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
export const syncLocalWishListToServer = createAsyncThunk<void, void>(
    "wishList/syncLocalToServer",
    async (_, { getState }) => {
        const state = getState() as { wishList: WishListState };
        const localWishList = state.wishList.wishList;

        if (localWishList.length > 0) {
            await fetch("/api/wish-list/sync", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ wishList: localWishList }),
            });

            localStorage.removeItem(LOCAL_STORAGE_KEY);
        }
    }
);

// ====================================================
// üéØ `Redux Slice` - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω—ã–º
// ====================================================
const wishListSlice = createSlice({
    name: "wishList", // –ò–º—è —Å–ª–∞–π—Å–∞ (—Ä–µ–¥—å—é—Å–µ—Ä–∞)
    initialState, // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–∑ `localStorage`)
    reducers: {
        // ‚úÖ –û—á–∏—Å—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ `localStorage`)
        clearWishList: (state) => {
            state.wishList = [];
            localStorage.removeItem(LOCAL_STORAGE_KEY);
        },

        // ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ (—Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ, –±–µ–∑ –∑–∞–ø—Ä–æ—Å–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É)
        addWishListItem: (state, action: PayloadAction<WishListItemDto>) => {
            const item = action.payload;

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ `wishList`
            if (!state.wishList.some((p) => p.id === item.id)) {
                state.wishList.push(item); // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ `Redux`
                localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(state.wishList)); // –û–±–Ω–æ–≤–ª—è–µ–º `localStorage`
            }
        },

        // ‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (–ª–æ–∫–∞–ª—å–Ω–æ –∏ –∏–∑ `localStorage`)
        removeWishListItem: (state, action: PayloadAction<string>) => {
            state.wishList = state.wishList.filter((item) => item.id !== action.payload); // –§–∏–ª—å—Ç—Ä—É–µ–º —Å–ø–∏—Å–æ–∫
            localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(state.wishList)); // –û–±–Ω–æ–≤–ª—è–µ–º `localStorage`
        },
        updateWishList: (state, action: PayloadAction<ShortProductDtoUiExtended[]>) => {
            state.wishList = action.payload;
        },
    },

    // üéØ `extraReducers` - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö `thunk`-–¥–µ–π—Å—Ç–≤–∏–π
    extraReducers: (builder) => {
        builder
            // ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ (`fetchWishListThunk`)
            .addCase(fetchWishListThunk.pending, (state) => {
                state.isLoading = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏
            })
            .addCase(fetchWishListThunk.fulfilled, (state, action: PayloadAction<GetWishListResponse>) => {
                state.isLoading = false; // –û—Ç–∫–ª—é—á–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏

                if (action.payload.success) {
                    state.wishList = action.payload.wishList; // –û–±–Ω–æ–≤–ª—è–µ–º `Redux` —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(action.payload.wishList)); // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º `localStorage`
                } else {
                    store.dispatch(addNotification({ message: action.payload.error ?? "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ", type: "error" }));
                }
            })
            .addCase(fetchWishListThunk.rejected, (state, action) => {
                state.isLoading = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏
                store.dispatch(addNotification({ message: action.payload as string ?? "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ", type: "error" }));
            })



    },
});

export const { clearWishList, addWishListItem, removeWishListItem, updateWishList } = wishListSlice.actions;
export default wishListSlice.reducer;
